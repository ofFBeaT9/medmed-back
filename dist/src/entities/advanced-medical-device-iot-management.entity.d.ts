import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class MedicalDevice {
    id: number;
    uuid: string;
    device_name: string;
    device_type: string;
    manufacturer: string;
    model_number: string;
    serial_number: string;
    device_status: string;
    location_id: number;
    installation_date: Date;
    last_maintenance: Date;
    warranty_expiration: Date;
    compliance_status: string;
    asset_tag: string;
    fda_classification: string;
    device_specifications: string;
    connectivity_features: string;
    integration_protocols: string;
    data_outputs: string;
    alarm_capabilities: string;
    security_features: string;
    calibration_requirements: string;
    maintenance_schedule: string;
    user_manual: string;
    training_requirements: string;
    safety_precautions: string;
    performance_metrics: string;
    quality_controls: string;
    regulatory_information: string;
    vendor_information: string;
    service_contracts: string;
    cost_information: string;
    purchase_price: number;
    annual_service_cost: number;
    purchase_date: Date;
    next_maintenance_due: Date;
    created_at: Date;
    updated_at: Date;
    location: Facility;
    device_data: DeviceData[];
    maintenance_records: DeviceMaintenance[];
}
export declare class DeviceData {
    id: number;
    uuid: string;
    medical_device_id: number;
    patient_id: number;
    data_timestamp: Date;
    data_type: string;
    measurement_type: string;
    data_source: string;
    alert_level: string;
    validation_status: string;
    clinical_context: string;
    session_id: string;
    measurement_values: string;
    waveform_data: string;
    alarm_information: string;
    device_settings: string;
    environmental_conditions: string;
    quality_indicators: string;
    calibration_data: string;
    error_codes: string;
    maintenance_alerts: string;
    user_interactions: string;
    clinical_annotations: string;
    trend_analysis: string;
    correlation_data: string;
    integration_metadata: string;
    transmission_log: string;
    data_processing_log: string;
    storage_metadata: string;
    clinically_reviewed: boolean;
    review_timestamp: Date;
    reviewed_by: number;
    created_at: Date;
    updated_at: Date;
    medical_device: MedicalDevice;
    patient: Patient;
    reviewer: User;
}
export declare class IoTSensor {
    id: number;
    uuid: string;
    sensor_name: string;
    sensor_type: string;
    location_id: number;
    sensor_status: string;
    communication_protocol: string;
    deployment_date: Date;
    last_communication: Date;
    battery_level: number;
    network_status: string;
    data_collection_frequency: number;
    sensor_id: string;
    manufacturer: string;
    model_number: string;
    firmware_version: string;
    sensor_specifications: string;
    measurement_capabilities: string;
    accuracy_specifications: string;
    calibration_settings: string;
    alert_thresholds: string;
    data_transmission: string;
    security_configuration: string;
    power_management: string;
    environmental_operating_range: string;
    maintenance_requirements: string;
    installation_details: string;
    network_configuration: string;
    performance_metrics: string;
    error_logging: string;
    usage_analytics: string;
    cost_tracking: string;
    purchase_cost: number;
    annual_operating_cost: number;
    warranty_expiration: Date;
    next_maintenance_due: Date;
    created_at: Date;
    updated_at: Date;
    location: Facility;
    sensor_data: IoTSensorData[];
}
export declare class IoTSensorData {
    id: number;
    uuid: string;
    iot_sensor_id: number;
    data_timestamp: Date;
    measurement_type: string;
    data_value: number;
    alert_status: string;
    data_quality: string;
    processing_status: string;
    aggregation_level: string;
    unit_of_measure: string;
    raw_data: string;
    processed_data: string;
    metadata: string;
    calibration_factors: string;
    environmental_context: string;
    correlation_data: string;
    trend_indicators: string;
    anomaly_detection: string;
    statistical_analysis: string;
    alert_triggers: string;
    validation_results: string;
    transmission_metadata: string;
    storage_information: string;
    processing_log: string;
    error_information: string;
    clinical_relevance: string;
    min_threshold: number;
    max_threshold: number;
    baseline_value: number;
    variance_percentage: number;
    alert_triggered: boolean;
    created_at: Date;
    updated_at: Date;
    iot_sensor: IoTSensor;
}
export declare class DeviceMaintenance {
    id: number;
    uuid: string;
    medical_device_id: number;
    maintenance_date: Date;
    maintenance_type: string;
    performed_by: number;
    maintenance_status: string;
    scheduled_date: Date;
    completion_date: Date;
    maintenance_priority: string;
    cost_category: string;
    maintenance_description: string;
    work_performed: string;
    parts_replaced: string;
    calibration_results: string;
    test_results: string;
    safety_checks: string;
    quality_assurance: string;
    documentation_updated: string;
    recommendations: string;
    issues_identified: string;
    corrective_actions: string;
    vendor_involvement: string;
    warranty_impact: string;
    compliance_verification: string;
    training_provided: string;
    cost_breakdown: string;
    labor_cost: number;
    parts_cost: number;
    total_cost: number;
    downtime_hours: number;
    next_maintenance_due: Date;
    maintenance_outcome: string;
    created_at: Date;
    updated_at: Date;
    medical_device: MedicalDevice;
    technician: User;
}
export declare class MedicalDeviceIoTQualityMetrics {
    id: number;
    uuid: string;
    reporting_period: Date;
    facility_id: number;
    device_category: string;
    metric_type: string;
    performance_indicator: string;
    technology_type: string;
    connectivity_status: string;
    total_devices: number;
    active_devices: number;
    offline_devices: number;
    device_uptime: number;
    data_transmission_success: number;
    data_accuracy_rate: number;
    average_response_time: number;
    connectivity_reliability: number;
    maintenance_compliance: number;
    alert_volume: number;
    critical_alerts: number;
    maintenance_cost: number;
    operational_cost: number;
    performance_trends: string;
    reliability_metrics: string;
    connectivity_analysis: string;
    maintenance_analytics: string;
    cost_analysis: string;
    user_satisfaction: string;
    improvement_opportunities: string;
    risk_assessment: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
