import { Patient, Encounter } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class RadiologyProcedure {
    id: number;
    uuid: string;
    procedure_code: string;
    procedure_name: string;
    procedure_description: string;
    modality: string;
    body_part: string;
    procedure_type: string;
    requires_contrast: number;
    contrast_type: string;
    preparation_instructions: string;
    estimated_duration_minutes: number;
    standard_price: number;
    cpt_code: string;
    active: number;
    contraindications: string;
    special_instructions: string;
    equipment_required: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    radiology_orders: RadiologyOrder[];
    radiology_reports: RadiologyReport[];
}
export declare class RadiologyOrder {
    id: number;
    uuid: string;
    patient_id: number;
    encounter_id: number;
    radiology_procedure_id: number;
    order_number: string;
    order_date: Date;
    ordering_provider: number;
    facility_id: number;
    status: string;
    priority: string;
    clinical_history: string;
    clinical_question: string;
    diagnosis_code: string;
    diagnosis_description: string;
    scheduled_date: Date;
    scheduled_time: Date;
    technologist_assigned: number;
    radiologist_assigned: number;
    equipment_id: string;
    special_instructions: string;
    requires_sedation: number;
    patient_pregnant: number;
    patient_weight_kg: number;
    allergies: string;
    medications: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    encounter: Encounter;
    radiology_procedure: RadiologyProcedure;
    provider: User;
    technologist: User;
    radiologist: User;
    facility: Facility;
    radiology_reports: RadiologyReport[];
    tracking_history: RadiologyOrderTracking[];
    dicom_studies: DicomStudy[];
}
export declare class RadiologyReport {
    id: number;
    uuid: string;
    radiology_order_id: number;
    radiology_procedure_id: number;
    report_number: string;
    radiologist_id: number;
    report_date: Date;
    status: string;
    clinical_history: string;
    technique: string;
    findings: string;
    impression: string;
    recommendations: string;
    overall_result: string;
    critical_findings: number;
    critical_findings_description: string;
    critical_findings_notification_date: Date;
    critical_findings_notified_to: number;
    dictated_date: Date;
    transcribed_date: Date;
    transcribed_by: number;
    verified_date: Date;
    signed_date: Date;
    voice_file_path: string;
    addendum_text: string;
    addendum_date: Date;
    correction_reason: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    radiology_order: RadiologyOrder;
    radiology_procedure: RadiologyProcedure;
    radiologist: User;
    transcriber: User;
    notified_provider: User;
    report_history: RadiologyReportHistory[];
}
export declare class RadiologyReportHistory {
    id: number;
    uuid: string;
    radiology_report_id: number;
    change_type: string;
    change_date: Date;
    changed_by: number;
    old_value: string;
    new_value: string;
    change_reason: string;
    notes: string;
    created_at: Date;
    radiology_report: RadiologyReport;
    changer: User;
}
export declare class RadiologyOrderTracking {
    id: number;
    uuid: string;
    radiology_order_id: number;
    status: string;
    status_date: Date;
    status_notes: string;
    updated_by: number;
    location: string;
    additional_info: string;
    created_at: Date;
    radiology_order: RadiologyOrder;
    updater: User;
}
export declare class DicomStudy {
    id: number;
    uuid: string;
    radiology_order_id: number;
    patient_id: number;
    study_instance_uid: string;
    accession_number: string;
    study_date: Date;
    study_time: Date;
    modality: string;
    study_description: string;
    referring_physician: string;
    performing_physician: string;
    interpreting_physician: string;
    institution_name: string;
    station_name: string;
    number_of_series: number;
    number_of_instances: number;
    study_size_bytes: number;
    storage_location: string;
    storage_status: string;
    received_date: Date;
    archived_date: Date;
    notes: string;
    created_at: Date;
    updated_at: Date;
    radiology_order: RadiologyOrder;
    patient: Patient;
    dicom_series: DicomSeries[];
}
export declare class DicomSeries {
    id: number;
    uuid: string;
    dicom_study_id: number;
    series_instance_uid: string;
    modality: string;
    series_number: number;
    series_description: string;
    body_part_examined: string;
    patient_position: string;
    number_of_instances: number;
    series_size_bytes: number;
    series_date: Date;
    series_time: Date;
    performing_physician: string;
    protocol_name: string;
    series_notes: string;
    created_at: Date;
    updated_at: Date;
    dicom_study: DicomStudy;
    dicom_instances: DicomInstance[];
}
export declare class DicomInstance {
    id: number;
    uuid: string;
    dicom_series_id: number;
    sop_instance_uid: string;
    sop_class_uid: string;
    instance_number: number;
    transfer_syntax_uid: string;
    instance_size_bytes: number;
    file_path: string;
    file_name: string;
    image_type: string;
    rows: number;
    columns: number;
    photometric_interpretation: string;
    bits_allocated: number;
    bits_stored: number;
    content_date: Date;
    content_time: Date;
    instance_notes: string;
    created_at: Date;
    updated_at: Date;
    dicom_series: DicomSeries;
}
export declare class RadiologyEquipment {
    id: number;
    uuid: string;
    equipment_id: string;
    equipment_name: string;
    modality: string;
    manufacturer: string;
    model: string;
    serial_number: string;
    software_version: string;
    facility_id: number;
    location: string;
    status: string;
    installation_date: Date;
    last_service_date: Date;
    next_service_date: Date;
    service_contract: string;
    dicom_ae_title: string;
    dicom_station_name: string;
    active: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
