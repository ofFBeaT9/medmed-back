import { User, Facility } from './facility-provider.entity';
export declare class DataClassification {
    id: number;
    uuid: string;
    classification_name: string;
    sensitivity_level: string;
    data_category: string;
    regulatory_framework: string;
    retention_period: number;
    access_level: string;
    encryption_requirement: string;
    audit_requirement: string;
    compliance_status: string;
    risk_level: string;
    classification_description: string;
    data_elements: string;
    handling_requirements: string;
    storage_requirements: string;
    transmission_rules: string;
    access_controls: string;
    masking_rules: string;
    anonymization_rules: string;
    pseudonymization_rules: string;
    encryption_specifications: string;
    backup_requirements: string;
    disposal_procedures: string;
    breach_notification: string;
    incident_response: string;
    compliance_verification: string;
    audit_procedures: string;
    training_requirements: string;
    vendor_requirements: string;
    international_transfer: string;
    legal_hold_procedures: string;
    subject_rights: string;
    requires_consent: boolean;
    allows_research_use: boolean;
    requires_dua: boolean;
    effective_date: Date;
    expiration_date: Date;
    created_at: Date;
    updated_at: Date;
    governance_policies: DataGovernancePolicy[];
    data_assets: DataAsset[];
}
export declare class DataAsset {
    id: number;
    uuid: string;
    asset_name: string;
    asset_type: string;
    data_classification_id: number;
    owner_id: number;
    steward_id: number;
    asset_status: string;
    business_criticality: string;
    data_source: string;
    last_updated: Date;
    quality_score: number;
    asset_description: string;
    business_purpose: string;
    data_schema: string;
    data_lineage: string;
    storage_location: string;
    access_patterns: string;
    usage_statistics: string;
    dependencies: string;
    data_flow: string;
    transformation_rules: string;
    validation_rules: string;
    quality_metrics: string;
    privacy_impact: string;
    security_controls: string;
    compliance_requirements: string;
    retention_policy: string;
    backup_strategy: string;
    disaster_recovery: string;
    cost_information: string;
    vendor_information: string;
    contact_information: string;
    record_count: number;
    storage_size: number;
    creation_date: Date;
    last_accessed: Date;
    next_review: Date;
    created_at: Date;
    updated_at: Date;
    data_classification: DataClassification;
    owner: User;
    steward: User;
    access_logs: DataAccessLog[];
    quality_assessments: DataQualityAssessment[];
}
export declare class DataGovernancePolicy {
    id: number;
    uuid: string;
    policy_name: string;
    policy_type: string;
    data_classification_id: number;
    policy_status: string;
    effective_date: Date;
    compliance_framework: string;
    enforcement_level: string;
    review_frequency: string;
    approval_status: string;
    risk_category: string;
    policy_description: string;
    policy_objectives: string;
    scope_definition: string;
    policy_rules: string;
    implementation_guidelines: string;
    compliance_requirements: string;
    enforcement_procedures: string;
    monitoring_controls: string;
    violation_consequences: string;
    exception_procedures: string;
    training_requirements: string;
    roles_responsibilities: string;
    approval_workflow: string;
    review_procedures: string;
    change_management: string;
    communication_plan: string;
    success_metrics: string;
    related_policies: string;
    legal_references: string;
    industry_standards: string;
    risk_mitigation: string;
    expiration_date: Date;
    last_review: Date;
    next_review: Date;
    created_at: Date;
    updated_at: Date;
    data_classification: DataClassification;
    compliance_records: PolicyCompliance[];
}
export declare class DataAccessLog {
    id: number;
    uuid: string;
    data_asset_id: number;
    user_id: number;
    access_timestamp: Date;
    access_type: string;
    access_method: string;
    access_result: string;
    data_sensitivity: string;
    business_justification: string;
    risk_score: number;
    compliance_flag: boolean;
    session_id: string;
    ip_address: string;
    user_agent: string;
    access_context: string;
    request_details: string;
    response_details: string;
    data_elements_accessed: string;
    query_parameters: string;
    filter_criteria: string;
    data_volume: string;
    authorization_details: string;
    consent_verification: string;
    purpose_limitation: string;
    data_minimization: string;
    retention_applied: string;
    masking_applied: string;
    anonymization_applied: string;
    audit_trail: string;
    privacy_controls: string;
    security_controls: string;
    compliance_verification: string;
    risk_assessment: string;
    records_accessed: number;
    duration_seconds: number;
    suspicious_activity: boolean;
    policy_violation: boolean;
    created_at: Date;
    updated_at: Date;
    data_asset: DataAsset;
    user: User;
}
export declare class PrivacyImpactAssessment {
    id: number;
    uuid: string;
    assessment_name: string;
    data_asset_id: number;
    assessment_status: string;
    risk_level: string;
    assessment_date: Date;
    reviewer_id: number;
    compliance_framework: string;
    mitigation_status: string;
    approval_status: string;
    assessment_description: string;
    data_processing_purpose: string;
    data_categories: string;
    data_subjects: string;
    legal_basis: string;
    consent_requirements: string;
    data_sharing: string;
    international_transfers: string;
    retention_analysis: string;
    security_measures: string;
    privacy_risks: string;
    risk_assessment: string;
    mitigation_measures: string;
    residual_risks: string;
    stakeholder_consultation: string;
    subject_rights_analysis: string;
    compliance_verification: string;
    monitoring_procedures: string;
    review_procedures: string;
    recommendations: string;
    action_plan: string;
    supporting_documentation: string;
    completion_date: Date;
    next_review: Date;
    approval_date: Date;
    created_at: Date;
    updated_at: Date;
    data_asset: DataAsset;
    reviewer: User;
}
export declare class DataQualityAssessment {
    id: number;
    uuid: string;
    data_asset_id: number;
    assessment_date: Date;
    quality_dimension: string;
    assessment_type: string;
    quality_score: number;
    assessment_method: string;
    compliance_level: string;
    improvement_needed: boolean;
    assessor_id: number;
    assessment_summary: string;
    quality_metrics: string;
    data_profiling: string;
    completeness_analysis: string;
    accuracy_analysis: string;
    consistency_analysis: string;
    timeliness_analysis: string;
    validity_analysis: string;
    uniqueness_analysis: string;
    integrity_analysis: string;
    anomaly_detection: string;
    trend_analysis: string;
    benchmark_comparison: string;
    impact_assessment: string;
    root_cause_analysis: string;
    improvement_recommendations: string;
    remediation_plan: string;
    monitoring_plan: string;
    validation_rules: string;
    cleansing_procedures: string;
    enrichment_opportunities: string;
    stakeholder_feedback: string;
    records_assessed: number;
    errors_identified: number;
    error_rate: number;
    next_assessment: Date;
    created_at: Date;
    updated_at: Date;
    data_asset: DataAsset;
    assessor: User;
}
export declare class PolicyCompliance {
    id: number;
    uuid: string;
    data_governance_policy_id: number;
    compliance_date: Date;
    compliance_status: string;
    compliance_score: number;
    auditor_id: number;
    risk_level: string;
    remediation_status: string;
    compliance_framework: string;
    next_review: Date;
    compliance_summary: string;
    assessment_criteria: string;
    compliance_evidence: string;
    non_compliance_issues: string;
    risk_assessment: string;
    impact_analysis: string;
    remediation_plan: string;
    corrective_actions: string;
    preventive_measures: string;
    monitoring_procedures: string;
    stakeholder_communication: string;
    training_requirements: string;
    resource_requirements: string;
    timeline_requirements: string;
    success_metrics: string;
    lessons_learned: string;
    best_practices: string;
    recommendations: string;
    follow_up_actions: string;
    audit_trail: string;
    remediation_deadline: Date;
    completion_date: Date;
    created_at: Date;
    updated_at: Date;
    data_governance_policy: DataGovernancePolicy;
    auditor: User;
}
export declare class HealthcareDataGovernanceQualityMetrics {
    id: number;
    uuid: string;
    reporting_period: Date;
    facility_id: number;
    governance_domain: string;
    metric_type: string;
    compliance_framework: string;
    risk_category: string;
    performance_indicator: string;
    maturity_level: string;
    total_data_assets: number;
    classified_assets: number;
    classification_coverage: number;
    policy_compliance_rate: number;
    data_quality_score: number;
    privacy_compliance_score: number;
    security_compliance_score: number;
    total_access_requests: number;
    approved_access_requests: number;
    access_approval_rate: number;
    privacy_incidents: number;
    data_breaches: number;
    incident_response_time: number;
    compliance_cost: number;
    governance_roi: number;
    governance_effectiveness: string;
    risk_mitigation_status: string;
    compliance_trends: string;
    quality_improvement: string;
    stakeholder_satisfaction: string;
    training_effectiveness: string;
    technology_adoption: string;
    process_optimization: string;
    benchmark_comparison: string;
    improvement_opportunities: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
