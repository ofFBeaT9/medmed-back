import { User, Facility } from './facility-provider.entity';
export declare class RegulatoryRequirement {
    id: number;
    uuid: string;
    requirement_name: string;
    requirement_type: string;
    regulatory_body: string;
    regulation_code: string;
    requirement_description: string;
    status: string;
    compliance_level: string;
    effective_date: Date;
    expiration_date: Date;
    frequency: string;
    scope_of_application: string;
    compliance_criteria: string;
    evidence_requirements: string;
    penalties_for_noncompliance: string;
    implementation_guidance: string;
    reference_url: string;
    related_requirements: string;
    created_by: number;
    last_reviewed_date: Date;
    reviewed_by: number;
    created_at: Date;
    updated_at: Date;
    creator: User;
    reviewer: User;
    compliance_assessments: ComplianceAssessment[];
    compliance_trainings: ComplianceTraining[];
}
export declare class ComplianceAssessment {
    id: number;
    uuid: string;
    regulatory_requirement_id: number;
    facility_id: number;
    assessment_type: string;
    assessment_date: Date;
    compliance_status: string;
    compliance_score: number;
    assessed_by: number;
    assessor_organization: string;
    assessment_methodology: string;
    evidence_reviewed: string;
    findings: string;
    deficiencies_identified: string;
    recommendations: string;
    corrective_actions_required: string;
    corrective_action_deadline: Date;
    risk_level: string;
    risk_assessment: string;
    next_assessment_due: Date;
    reviewed_by: number;
    reviewed_date: Date;
    reviewer_notes: string;
    created_at: Date;
    updated_at: Date;
    regulatory_requirement: RegulatoryRequirement;
    facility: Facility;
    assessor: User;
    reviewer: User;
    corrective_actions: CorrectiveAction[];
}
export declare class CorrectiveAction {
    id: number;
    uuid: string;
    compliance_assessment_id: number;
    action_title: string;
    action_description: string;
    action_type: string;
    priority: string;
    status: string;
    due_date: Date;
    assigned_to: number;
    assigned_date: Date;
    implementation_plan: string;
    resource_requirements: string;
    estimated_cost: number;
    actual_cost: number;
    completion_percentage: number;
    start_date: Date;
    completion_date: Date;
    progress_notes: string;
    barriers_encountered: string;
    success_measures: string;
    verification_evidence: string;
    verified_by: number;
    verification_date: Date;
    verification_notes: string;
    follow_up_actions: string;
    created_at: Date;
    updated_at: Date;
    compliance_assessment: ComplianceAssessment;
    assignee: User;
    verifier: User;
}
export declare class AccreditationStandard {
    id: number;
    uuid: string;
    accrediting_body: string;
    standard_number: string;
    standard_title: string;
    standard_category: string;
    standard_description: string;
    status: string;
    effective_date: Date;
    revision_date: Date;
    intent_statement: string;
    elements_of_performance: string;
    rationale: string;
    scoring_guidance: string;
    survey_procedures: string;
    reference_materials: string;
    related_standards: string;
    created_at: Date;
    updated_at: Date;
    accreditation_surveys: AccreditationSurvey[];
}
export declare class AccreditationSurvey {
    id: number;
    uuid: string;
    accreditation_standard_id: number;
    facility_id: number;
    survey_type: string;
    survey_date: Date;
    survey_status: string;
    surveyor_name: string;
    surveyor_organization: string;
    survey_scope: string;
    survey_methodology: string;
    documentation_reviewed: string;
    interviews_conducted: string;
    observations_made: string;
    compliance_score: string;
    findings: string;
    deficiencies: string;
    recommendations: string;
    corrective_actions_required: string;
    response_due_date: Date;
    organization_response: string;
    follow_up_survey_date: Date;
    accreditation_decision: string;
    accreditation_expiration_date: Date;
    created_at: Date;
    updated_at: Date;
    accreditation_standard: AccreditationStandard;
    facility: Facility;
}
export declare class ComplianceTraining {
    id: number;
    uuid: string;
    regulatory_requirement_id: number;
    training_title: string;
    training_description: string;
    training_type: string;
    target_audience: string;
    training_date: Date;
    duration_minutes: number;
    learning_objectives: string;
    training_content: string;
    trainer_name: string;
    training_location: string;
    completion_status: string;
    required_attendees: number;
    actual_attendees: number;
    completion_rate: number;
    passing_score_required: number;
    average_score: number;
    assessment_results: string;
    participant_feedback: string;
    training_effectiveness: string;
    certification_expiration: Date;
    requires_recertification: number;
    recertification_interval_months: number;
    created_by: number;
    created_at: Date;
    updated_at: Date;
    regulatory_requirement: RegulatoryRequirement;
    creator: User;
    training_attendances: TrainingAttendance[];
}
export declare class TrainingAttendance {
    id: number;
    uuid: string;
    compliance_training_id: number;
    user_id: number;
    completion_date: Date;
    completion_status: string;
    score_achieved: number;
    passed: number;
    attempts: number;
    last_attempt_date: Date;
    notes: string;
    certification_expiration_date: Date;
    certificate_number: string;
    certificate_issued: number;
    remedial_training_required: string;
    created_at: Date;
    updated_at: Date;
    compliance_training: ComplianceTraining;
    user: User;
}
export declare class PolicyManagement {
    id: number;
    uuid: string;
    regulatory_requirement_id: number;
    policy_number: string;
    policy_title: string;
    policy_category: string;
    policy_purpose: string;
    policy_content: string;
    status: string;
    effective_date: Date;
    review_date: Date;
    expiration_date: Date;
    version: string;
    revision_history: string;
    policy_owner: number;
    approval_workflow: string;
    approved_date: Date;
    approved_by: number;
    distribution_list: string;
    training_requirements: string;
    related_policies: string;
    attachments: string;
    created_at: Date;
    updated_at: Date;
    regulatory_requirement: RegulatoryRequirement;
    owner: User;
    approver: User;
}
