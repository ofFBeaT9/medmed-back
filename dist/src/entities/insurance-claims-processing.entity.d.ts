import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
import { InsuranceCompany } from './billing-insurance.entity';
export declare class InsuranceEligibility {
    id: number;
    uuid: string;
    patient_id: number;
    insurance_company_id: number;
    policy_number: string;
    group_number: string;
    subscriber_id: string;
    verification_date: Date;
    status: string;
    effective_date: Date;
    termination_date: Date;
    deductible_amount: number;
    deductible_met: number;
    out_of_pocket_max: number;
    out_of_pocket_met: number;
    copay_amount: number;
    coinsurance_percentage: number;
    benefits_summary: string;
    coverage_details: string;
    exclusions: string;
    verification_method: string;
    verification_reference: string;
    verified_by: number;
    verification_notes: string;
    raw_response: string;
    next_verification_date: Date;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    insurance_company: InsuranceCompany;
    verifier: User;
}
export declare class PriorAuthorization {
    id: number;
    uuid: string;
    patient_id: number;
    insurance_company_id: number;
    authorization_number: string;
    status: string;
    service_type: string;
    procedure_code: string;
    procedure_description: string;
    diagnosis_code: string;
    diagnosis_description: string;
    service_date: Date;
    service_end_date: Date;
    quantity_requested: number;
    quantity_approved: number;
    request_date: Date;
    approval_date: Date;
    expiration_date: Date;
    requesting_provider: number;
    facility_id: number;
    clinical_information: string;
    justification: string;
    denial_reason: string;
    reference_number: string;
    contact_name: string;
    contact_phone: string;
    contact_email: string;
    notes: string;
    attachments: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    insurance_company: InsuranceCompany;
    provider: User;
    facility: Facility;
    tracking_history: AuthorizationTracking[];
}
export declare class AuthorizationTracking {
    id: number;
    uuid: string;
    prior_authorization_id: number;
    status: string;
    status_date: Date;
    status_notes: string;
    updated_by: number;
    contact_method: string;
    contact_reference: string;
    additional_info: string;
    created_at: Date;
    prior_authorization: PriorAuthorization;
    updater: User;
}
export declare class ClaimsTracking {
    id: number;
    uuid: string;
    claim_id: string;
    payer_claim_id: string;
    status: string;
    submission_date: Date;
    received_date: Date;
    processed_date: Date;
    submission_method: string;
    clearinghouse_id: string;
    batch_id: string;
    submission_response: string;
    rejection_codes: string;
    rejection_reasons: string;
    billed_amount: number;
    allowed_amount: number;
    paid_amount: number;
    patient_responsibility: number;
    adjustment_amount: number;
    adjustment_reasons: string;
    check_number: string;
    check_date: Date;
    eob_data: string;
    notes: string;
    tracked_by: number;
    created_at: Date;
    updated_at: Date;
    tracker: User;
    status_history: ClaimStatusHistory[];
}
export declare class ClaimStatusHistory {
    id: number;
    uuid: string;
    claims_tracking_id: number;
    status: string;
    status_date: Date;
    status_description: string;
    status_notes: string;
    updated_by: number;
    update_source: string;
    additional_data: string;
    created_at: Date;
    claims_tracking: ClaimsTracking;
    updater: User;
}
export declare class ElectronicRemittance {
    id: number;
    uuid: string;
    era_file_id: string;
    check_number: string;
    payment_date: Date;
    total_payment_amount: number;
    payer_id: string;
    payer_name: string;
    payee_name: string;
    payee_npi: string;
    trace_number: string;
    raw_era_data: string;
    processed_date: Date;
    processing_status: string;
    processing_errors: string;
    processed_by: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    processor: User;
    remittance_details: RemittanceDetail[];
}
export declare class RemittanceDetail {
    id: number;
    uuid: string;
    electronic_remittance_id: number;
    claim_id: string;
    patient_control_number: string;
    patient_name: string;
    service_date_from: Date;
    service_date_to: Date;
    charge_amount: number;
    payment_amount: number;
    patient_responsibility: number;
    claim_status: string;
    adjustment_codes: string;
    adjustment_amounts: string;
    remark_codes: string;
    service_line_details: string;
    created_at: Date;
    electronic_remittance: ElectronicRemittance;
}
export declare class ClaimsAppeal {
    id: number;
    uuid: string;
    original_claim_id: string;
    appeal_reference_number: string;
    appeal_level: number;
    appeal_status: string;
    appeal_type: string;
    submission_date: Date;
    deadline_date: Date;
    appeal_reason: string;
    additional_documentation: string;
    submitted_by: number;
    decision_date: Date;
    decision_outcome: string;
    decision_notes: string;
    original_denied_amount: number;
    appeal_approved_amount: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    submitter: User;
    tracking_history: AppealTracking[];
}
export declare class AppealTracking {
    id: number;
    uuid: string;
    claims_appeal_id: number;
    status: string;
    status_date: Date;
    status_notes: string;
    updated_by: number;
    contact_method: string;
    additional_info: string;
    created_at: Date;
    claims_appeal: ClaimsAppeal;
    updater: User;
}
