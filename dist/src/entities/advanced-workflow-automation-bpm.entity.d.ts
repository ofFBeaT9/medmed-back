import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class WorkflowTemplate {
    id: number;
    uuid: string;
    template_name: string;
    workflow_category: string;
    process_type: string;
    template_status: string;
    clinical_specialty: string;
    complexity_level: string;
    automation_level: string;
    compliance_requirements: string;
    version: string;
    approval_status: string;
    template_description: string;
    workflow_definition: string;
    process_steps: string;
    decision_points: string;
    automation_rules: string;
    role_assignments: string;
    permission_requirements: string;
    business_rules: string;
    validation_rules: string;
    escalation_rules: string;
    notification_settings: string;
    sla_requirements: string;
    quality_measures: string;
    performance_metrics: string;
    exception_handling: string;
    documentation_requirements: string;
    training_materials: string;
    implementation_guide: string;
    testing_procedures: string;
    change_management: string;
    risk_assessment: string;
    estimated_duration: number;
    max_participants: number;
    usage_count: number;
    success_rate: number;
    last_reviewed: Date;
    next_review: Date;
    created_at: Date;
    updated_at: Date;
    workflow_instances: WorkflowInstance[];
    workflow_steps: WorkflowStep[];
}
export declare class WorkflowInstance {
    id: number;
    uuid: string;
    workflow_template_id: number;
    patient_id: number;
    facility_id: number;
    initiated_by: number;
    instance_status: string;
    priority_level: string;
    start_timestamp: Date;
    completion_timestamp: Date;
    current_step: string;
    assigned_to: number;
    instance_title: string;
    instance_description: string;
    context_data: string;
    input_parameters: string;
    process_variables: string;
    decision_outcomes: string;
    step_execution_log: string;
    error_log: string;
    performance_metrics: string;
    sla_tracking: string;
    quality_checkpoints: string;
    stakeholder_notifications: string;
    documentation_artifacts: string;
    compliance_tracking: string;
    risk_indicators: string;
    escalation_history: string;
    participant_feedback: string;
    business_outcomes: string;
    lessons_learned: string;
    follow_up_actions: string;
    total_steps: number;
    completed_steps: number;
    completion_percentage: number;
    actual_duration: number;
    efficiency_score: number;
    created_at: Date;
    updated_at: Date;
    workflow_template: WorkflowTemplate;
    patient: Patient;
    facility: Facility;
    initiator: User;
    assignee: User;
    step_executions: WorkflowStepExecution[];
}
export declare class WorkflowStep {
    id: number;
    uuid: string;
    workflow_template_id: number;
    step_name: string;
    step_type: string;
    step_order: number;
    step_status: string;
    automation_type: string;
    required_role: string;
    estimated_duration: number;
    dependency_type: string;
    step_description: string;
    step_instructions: string;
    input_requirements: string;
    output_specifications: string;
    validation_rules: string;
    business_logic: string;
    decision_criteria: string;
    automation_script: string;
    form_definitions: string;
    documentation_templates: string;
    notification_rules: string;
    escalation_procedures: string;
    error_handling: string;
    quality_checkpoints: string;
    compliance_requirements: string;
    performance_metrics: string;
    training_materials: string;
    help_documentation: string;
    integration_endpoints: string;
    data_requirements: string;
    security_requirements: string;
    predecessor_steps: string;
    successor_steps: string;
    is_mandatory: boolean;
    allows_delegation: boolean;
    requires_approval: boolean;
    created_at: Date;
    updated_at: Date;
    workflow_template: WorkflowTemplate;
    step_executions: WorkflowStepExecution[];
}
export declare class WorkflowStepExecution {
    id: number;
    uuid: string;
    workflow_instance_id: number;
    workflow_step_id: number;
    assigned_user_id: number;
    execution_status: string;
    start_timestamp: Date;
    completion_timestamp: Date;
    execution_result: string;
    quality_score: number;
    efficiency_rating: number;
    execution_notes: string;
    input_data: string;
    output_data: string;
    decision_outcomes: string;
    validation_results: string;
    error_details: string;
    warning_messages: string;
    performance_data: string;
    resource_utilization: string;
    user_interactions: string;
    system_interactions: string;
    documentation_generated: string;
    notifications_sent: string;
    escalations_triggered: string;
    compliance_verification: string;
    quality_assessments: string;
    risk_indicators: string;
    improvement_opportunities: string;
    participant_feedback: string;
    lessons_learned: string;
    actual_duration: number;
    retry_count: number;
    sla_compliance: number;
    created_at: Date;
    updated_at: Date;
    workflow_instance: WorkflowInstance;
    workflow_step: WorkflowStep;
    assigned_user: User;
}
export declare class BusinessProcessAutomation {
    id: number;
    uuid: string;
    process_name: string;
    automation_type: string;
    trigger_condition: string;
    process_status: string;
    business_domain: string;
    automation_level: string;
    execution_frequency: string;
    performance_indicator: string;
    compliance_requirement: string;
    risk_level: string;
    process_description: string;
    automation_logic: string;
    trigger_configuration: string;
    execution_parameters: string;
    business_rules: string;
    decision_matrix: string;
    data_sources: string;
    data_transformations: string;
    integration_endpoints: string;
    validation_rules: string;
    error_handling: string;
    exception_management: string;
    notification_settings: string;
    monitoring_configuration: string;
    logging_specifications: string;
    performance_metrics: string;
    quality_controls: string;
    security_measures: string;
    compliance_controls: string;
    audit_requirements: string;
    documentation_standards: string;
    training_materials: string;
    execution_count: number;
    success_rate: number;
    cost_savings: number;
    time_savings: number;
    last_execution: Date;
    next_scheduled: Date;
    created_at: Date;
    updated_at: Date;
    automation_executions: AutomationExecution[];
}
export declare class AutomationExecution {
    id: number;
    uuid: string;
    business_process_automation_id: number;
    execution_timestamp: Date;
    execution_status: string;
    trigger_source: string;
    execution_duration: number;
    success_indicator: string;
    error_category: string;
    performance_score: number;
    business_impact: string;
    execution_id: string;
    execution_context: string;
    input_data: string;
    output_data: string;
    processing_log: string;
    decision_outcomes: string;
    business_rule_results: string;
    validation_results: string;
    transformation_log: string;
    integration_calls: string;
    error_details: string;
    warning_messages: string;
    performance_metrics: string;
    resource_utilization: string;
    quality_assessments: string;
    compliance_verification: string;
    audit_trail: string;
    notifications_sent: string;
    documents_generated: string;
    business_outcomes: string;
    improvement_opportunities: string;
    records_processed: number;
    records_successful: number;
    records_failed: number;
    cost_impact: number;
    time_saved: number;
    created_at: Date;
    updated_at: Date;
    business_process_automation: BusinessProcessAutomation;
}
export declare class HealthcareWorkflowQualityMetrics {
    id: number;
    uuid: string;
    reporting_period: Date;
    facility_id: number;
    workflow_category: string;
    metric_type: string;
    performance_indicator: string;
    process_efficiency: string;
    automation_impact: string;
    quality_outcome: string;
    total_workflows: number;
    completed_workflows: number;
    cancelled_workflows: number;
    completion_rate: number;
    average_cycle_time: number;
    median_cycle_time: number;
    error_rate: number;
    rework_rate: number;
    sla_compliance: number;
    quality_score: number;
    user_satisfaction: number;
    automation_percentage: number;
    cost_per_workflow: number;
    cost_savings: number;
    time_savings: number;
    roi_percentage: number;
    performance_trends: string;
    bottleneck_analysis: string;
    optimization_opportunities: string;
    automation_recommendations: string;
    quality_improvements: string;
    compliance_metrics: string;
    user_feedback_analysis: string;
    business_impact_analysis: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
