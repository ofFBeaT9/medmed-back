import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class PharmacyPrescription {
    id: number;
    uuid: string;
    patient_id: number;
    prescriber_id: number;
    prescription_date: Date;
    prescription_status: string;
    rx_number: string;
    drug_ndc: string;
    drug_name: string;
    drug_strength: string;
    dosage_form: string;
    directions_for_use: string;
    quantity_prescribed: number;
    quantity_unit: string;
    days_supply: number;
    refills_authorized: number;
    refills_remaining: number;
    expiration_date: Date;
    generic_substitution_allowed: number;
    dea_schedule: string;
    clinical_notes: string;
    pharmacy_notes: string;
    prescriber_dea: string;
    prescriber_npi: string;
    pharmacy_id: number;
    pharmacist_id: number;
    dispensed_date: Date;
    quantity_dispensed: number;
    lot_number: string;
    expiry_date: Date;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    prescriber: User;
    pharmacy: Facility;
    pharmacist: User;
    pharmacy_dispensings: PharmacyDispensing[];
    drug_interactions: DrugInteractionCheck[];
}
export declare class PharmacyInventory {
    id: number;
    uuid: string;
    drug_ndc: string;
    drug_name: string;
    drug_strength: string;
    dosage_form: string;
    manufacturer: string;
    lot_number: string;
    expiry_date: Date;
    pharmacy_id: number;
    quantity_on_hand: number;
    unit_of_measure: string;
    unit_cost: number;
    wholesale_price: number;
    retail_price: number;
    reorder_point: number;
    reorder_quantity: number;
    storage_requirements: string;
    storage_location: string;
    dea_schedule: string;
    refrigerated: number;
    hazardous: number;
    vendor_id: string;
    last_received_date: Date;
    last_received_quantity: number;
    formulary_status: string;
    inventory_notes: string;
    created_at: Date;
    updated_at: Date;
    pharmacy: Facility;
    pharmacy_dispensings: PharmacyDispensing[];
    inventory_transactions: InventoryTransaction[];
}
export declare class PharmacyDispensing {
    id: number;
    uuid: string;
    prescription_id: number;
    patient_id: number;
    inventory_item_id: number;
    dispensing_date: Date;
    dispensing_status: string;
    pharmacist_id: number;
    technician_id: number;
    quantity_dispensed: number;
    unit_dispensed: string;
    days_supply_dispensed: number;
    lot_number: string;
    expiry_date: Date;
    copay_amount: number;
    insurance_amount: number;
    total_cost: number;
    payment_method: string;
    patient_counseling: string;
    counseling_refused: number;
    dispensing_notes: string;
    generic_substitution: string;
    patient_signature: string;
    pickup_time: Date;
    pickup_person: string;
    pickup_id_type: string;
    pickup_id_number: string;
    created_at: Date;
    updated_at: Date;
    prescription: PharmacyPrescription;
    patient: Patient;
    inventory_item: PharmacyInventory;
    pharmacist: User;
    technician: User;
}
export declare class DrugInteractionCheck {
    id: number;
    uuid: string;
    prescription_id: number;
    patient_id: number;
    check_date: Date;
    interaction_type: string;
    severity_level: string;
    drug1_name: string;
    drug1_ndc: string;
    drug2_name: string;
    drug2_ndc: string;
    interaction_description: string;
    clinical_effects: string;
    management_recommendations: string;
    alert_status: string;
    overridden_by: number;
    override_reason: string;
    override_date: Date;
    data_source: string;
    references: string;
    patient_notified: number;
    prescriber_notified: number;
    created_at: Date;
    updated_at: Date;
    prescription: PharmacyPrescription;
    patient: Patient;
    overriding_pharmacist: User;
}
export declare class InventoryTransaction {
    id: number;
    uuid: string;
    inventory_item_id: number;
    transaction_date: Date;
    transaction_type: string;
    reference_number: string;
    quantity_before: number;
    quantity_change: number;
    quantity_after: number;
    unit_of_measure: string;
    unit_cost: number;
    total_cost: number;
    user_id: number;
    vendor_name: string;
    invoice_number: string;
    lot_number: string;
    expiry_date: Date;
    transaction_notes: string;
    reason_code: string;
    approved_by: number;
    approval_date: Date;
    created_at: Date;
    updated_at: Date;
    inventory_item: PharmacyInventory;
    user: User;
    approver: User;
}
export declare class PharmacyWorkflow {
    id: number;
    uuid: string;
    patient_id: number;
    workflow_type: string;
    workflow_status: string;
    pharmacist_id: number;
    created_date: Date;
    scheduled_date: Date;
    completed_date: Date;
    workflow_description: string;
    clinical_findings: string;
    recommendations: string;
    interventions: string;
    patient_education: string;
    follow_up_plan: string;
    next_review_date: Date;
    time_spent_minutes: number;
    service_fee: number;
    billing_code: string;
    documentation: string;
    patient_consent: number;
    workflow_notes: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    pharmacist: User;
}
