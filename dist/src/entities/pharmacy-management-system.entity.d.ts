import { Patient, Encounter } from './patient-management.entity';
import { User, Pharmacy } from './facility-provider.entity';
export declare class DrugFormulary {
    id: number;
    uuid: string;
    drug_code: string;
    drug_name: string;
    generic_name: string;
    drug_class: string;
    drug_subclass: string;
    dosage_form: string;
    strength: string;
    route: string;
    manufacturer: string;
    ndc_number: string;
    upc_code: string;
    unit_cost: number;
    wholesale_cost: number;
    package_size: string;
    unit_of_measure: string;
    controlled_substance: number;
    dea_schedule: string;
    active: number;
    indications: string;
    contraindications: string;
    side_effects: string;
    drug_interactions: string;
    warnings: string;
    precautions: string;
    dosing_guidelines: string;
    storage_requirements: string;
    expiration_date: Date;
    notes: string;
    created_at: Date;
    updated_at: Date;
    prescriptions: Prescription[];
    pharmacy_inventory: PharmacyInventory[];
}
export declare class Prescription {
    id: number;
    uuid: string;
    patient_id: number;
    encounter_id: number;
    drug_formulary_id: number;
    prescription_number: string;
    prescriber_id: number;
    prescription_date: Date;
    status: string;
    sig: string;
    quantity: number;
    unit: string;
    refills: number;
    refills_remaining: number;
    days_supply: number;
    indication: string;
    generic_substitution_allowed: number;
    priority: string;
    pharmacy_id: number;
    date_transmitted: Date;
    date_filled: Date;
    expiration_date: Date;
    transmission_method: string;
    transmission_reference: string;
    special_instructions: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    encounter: Encounter;
    drug_formulary: DrugFormulary;
    prescriber: User;
    pharmacy: Pharmacy;
    prescription_history: PrescriptionHistory[];
    prescription_refills: PrescriptionRefill[];
}
export declare class PrescriptionHistory {
    id: number;
    uuid: string;
    prescription_id: number;
    change_type: string;
    change_date: Date;
    changed_by: number;
    old_value: string;
    new_value: string;
    change_reason: string;
    notes: string;
    created_at: Date;
    prescription: Prescription;
    changer: User;
}
export declare class PrescriptionRefill {
    id: number;
    uuid: string;
    prescription_id: number;
    refill_number: number;
    refill_date: Date;
    quantity_dispensed: number;
    days_supply: number;
    pharmacy_id: number;
    pharmacist_name: string;
    lot_number: string;
    expiration_date: Date;
    copay_amount: number;
    insurance_paid: number;
    total_cost: number;
    counseling_provided: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    prescription: Prescription;
    pharmacy: Pharmacy;
}
export declare class DrugInteraction {
    id: number;
    uuid: string;
    drug1_id: number;
    drug2_id: number;
    severity: string;
    interaction_type: string;
    description: string;
    mechanism: string;
    clinical_effects: string;
    management: string;
    reference: string;
    active: number;
    created_at: Date;
    updated_at: Date;
    drug1: DrugFormulary;
    drug2: DrugFormulary;
}
export declare class DrugAllergyInteraction {
    id: number;
    uuid: string;
    drug_formulary_id: number;
    allergy_name: string;
    severity: string;
    description: string;
    cross_sensitivity: string;
    alternative_drugs: string;
    active: number;
    created_at: Date;
    updated_at: Date;
    drug_formulary: DrugFormulary;
}
export declare class PharmacyInventory {
    id: number;
    uuid: string;
    pharmacy_id: number;
    drug_formulary_id: number;
    lot_number: string;
    expiration_date: Date;
    quantity_on_hand: number;
    quantity_allocated: number;
    quantity_available: number;
    reorder_level: number;
    maximum_level: number;
    unit_cost: number;
    total_cost: number;
    vendor: string;
    last_received_date: Date;
    storage_location: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    pharmacy: Pharmacy;
    drug_formulary: DrugFormulary;
    inventory_transactions: InventoryTransaction[];
}
export declare class InventoryTransaction {
    id: number;
    uuid: string;
    pharmacy_inventory_id: number;
    transaction_type: string;
    transaction_date: Date;
    quantity: number;
    balance_after: number;
    reference_number: string;
    performed_by: number;
    reason: string;
    notes: string;
    created_at: Date;
    pharmacy_inventory: PharmacyInventory;
    performer: User;
}
export declare class MedicationAdministrationRecord {
    id: number;
    uuid: string;
    patient_id: number;
    prescription_id: number;
    scheduled_time: Date;
    administration_date: Date;
    status: string;
    dose_given: number;
    dose_unit: string;
    route: string;
    site: string;
    administered_by: number;
    witnessed_by: number;
    reason_not_given: string;
    patient_response: string;
    side_effects: string;
    notes: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    prescription: Prescription;
    administrator: User;
    witness: User;
}
