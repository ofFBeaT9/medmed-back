import { Patient } from './patient-management.entity';
import { User } from './facility-provider.entity';
import { Encounter } from './patient-management.entity';
export declare class ClinicalDecisionRule {
    id: number;
    uuid: string;
    rule_name: string;
    rule_category: string;
    specialty: string;
    rule_description: string;
    clinical_conditions: string;
    trigger_criteria: string;
    rule_logic: string;
    recommendation_text: string;
    recommendation_type: string;
    priority_level: string;
    alert_type: string;
    evidence_source: string;
    evidence_level: string;
    references: string;
    active_status: string;
    effective_date: Date;
    expiration_date: Date;
    last_updated: Date;
    updated_by: number;
    update_notes: string;
    version_number: number;
    rule_parameters: string;
    created_at: Date;
    updated_at: Date;
    updater: User;
    clinical_alerts: ClinicalAlert[];
    rule_executions: RuleExecution[];
}
export declare class ClinicalAlert {
    id: number;
    uuid: string;
    patient_id: number;
    encounter_id: number;
    clinical_rule_id: number;
    alert_date: Date;
    alert_status: string;
    alert_type: string;
    severity_level: string;
    alert_title: string;
    alert_message: string;
    recommendation: string;
    rationale: string;
    clinical_data: string;
    triggered_by_user: number;
    acknowledged_by: number;
    acknowledged_date: Date;
    acknowledgment_notes: string;
    action_taken: string;
    dismissed_by: number;
    dismissed_date: Date;
    dismissal_reason: string;
    expiry_date: Date;
    auto_resolve: number;
    alert_metadata: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    encounter: Encounter;
    clinical_rule: ClinicalDecisionRule;
    triggering_user: User;
    acknowledging_user: User;
    dismissing_user: User;
}
export declare class RuleExecution {
    id: number;
    uuid: string;
    clinical_rule_id: number;
    patient_id: number;
    encounter_id: number;
    execution_date: Date;
    execution_result: string;
    trigger_event: string;
    trigger_data: string;
    evaluation_data: string;
    rule_output: string;
    execution_time_ms: number;
    rule_version: string;
    executed_by_user: number;
    execution_context: string;
    error_message: string;
    debug_info: string;
    alert_generated: number;
    user_override: number;
    override_reason: string;
    created_at: Date;
    updated_at: Date;
    clinical_rule: ClinicalDecisionRule;
    patient: Patient;
    encounter: Encounter;
    executing_user: User;
}
export declare class ClinicalGuideline {
    id: number;
    uuid: string;
    guideline_name: string;
    specialty: string;
    guideline_type: string;
    organization: string;
    guideline_summary: string;
    clinical_conditions: string;
    target_population: string;
    recommendations: string;
    evidence_summary: string;
    evidence_quality: string;
    recommendation_strength: string;
    publication_date: Date;
    last_review_date: Date;
    next_review_date: Date;
    active_status: string;
    keywords: string;
    references: string;
    guideline_url: string;
    implementation_notes: string;
    contraindications: string;
    special_populations: string;
    created_at: Date;
    updated_at: Date;
    guideline_recommendations: GuidelineRecommendation[];
}
export declare class GuidelineRecommendation {
    id: number;
    uuid: string;
    clinical_guideline_id: number;
    recommendation_type: string;
    recommendation_title: string;
    recommendation_text: string;
    clinical_scenario: string;
    strength_of_recommendation: string;
    quality_of_evidence: string;
    patient_population: string;
    clinical_benefits: string;
    potential_harms: string;
    implementation_considerations: string;
    monitoring_parameters: string;
    contraindications: string;
    alternative_recommendations: string;
    recommendation_order: number;
    supporting_evidence: string;
    implementation_tools: string;
    created_at: Date;
    updated_at: Date;
    clinical_guideline: ClinicalGuideline;
}
export declare class ClinicalPathway {
    id: number;
    uuid: string;
    pathway_name: string;
    clinical_condition: string;
    pathway_type: string;
    specialty: string;
    pathway_description: string;
    inclusion_criteria: string;
    exclusion_criteria: string;
    pathway_steps: string;
    decision_points: string;
    outcome_measures: string;
    expected_length_of_stay: number;
    quality_indicators: string;
    active_status: string;
    effective_date: Date;
    review_date: Date;
    pathway_owner: number;
    evidence_base: string;
    implementation_notes: string;
    created_at: Date;
    updated_at: Date;
    owner: User;
    pathway_executions: PathwayExecution[];
}
export declare class PathwayExecution {
    id: number;
    uuid: string;
    clinical_pathway_id: number;
    patient_id: number;
    encounter_id: number;
    start_date: Date;
    end_date: Date;
    execution_status: string;
    current_step: string;
    completed_steps: string;
    pending_steps: string;
    deviations: string;
    variance_reasons: string;
    outcome_data: string;
    actual_length_of_stay: number;
    primary_provider: number;
    case_manager: number;
    execution_notes: string;
    last_review_date: Date;
    last_reviewed_by: number;
    created_at: Date;
    updated_at: Date;
    clinical_pathway: ClinicalPathway;
    patient: Patient;
    encounter: Encounter;
    provider: User;
    manager: User;
    reviewer: User;
}
