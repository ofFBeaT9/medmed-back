import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class RevenueCycleConfiguration {
    id: number;
    uuid: string;
    facility_id: number;
    config_type: string;
    config_name: string;
    config_description: string;
    status: string;
    configuration_data: string;
    business_rules: string;
    priority_order: number;
    effective_date: Date;
    expiration_date: Date;
    created_by: number;
    approved_by: number;
    approved_date: Date;
    approval_notes: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    creator: User;
    approver: User;
}
export declare class BillingCycle {
    id: number;
    uuid: string;
    facility_id: number;
    cycle_name: string;
    cycle_type: string;
    status: string;
    billing_date: Date;
    due_date: Date;
    cycle_start_date: Date;
    cycle_end_date: Date;
    inclusion_criteria: string;
    exclusion_criteria: string;
    total_claims: number;
    processed_claims: number;
    failed_claims: number;
    total_amount: number;
    billed_amount: number;
    adjustment_amount: number;
    processing_started: Date;
    processing_completed: Date;
    processed_by: number;
    processing_notes: string;
    error_summary: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    processor: User;
    claim_submissions: ClaimSubmission[];
}
export declare class ClaimSubmission {
    id: number;
    uuid: string;
    billing_cycle_id: number;
    patient_id: number;
    insurance_plan_id: number;
    claim_number: string;
    claim_status: string;
    claim_type: string;
    submission_date: Date;
    clearinghouse_id: string;
    payer_id: string;
    total_charges: number;
    allowed_amount: number;
    paid_amount: number;
    patient_responsibility: number;
    adjustment_amount: number;
    service_dates: string;
    diagnosis_codes: string;
    procedure_codes: string;
    place_of_service: string;
    provider_npi: string;
    facility_npi: string;
    claim_data: string;
    acknowledgment_date: Date;
    acknowledgment_id: string;
    adjudication_date: Date;
    denial_reasons: string;
    edit_errors: string;
    resubmission_count: number;
    original_claim_id: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    billing_cycle: BillingCycle;
    patient: Patient;
    payment_postings: PaymentPosting[];
    denial_managements: DenialManagement[];
}
export declare class PaymentPosting {
    id: number;
    uuid: string;
    claim_submission_id: number;
    payment_type: string;
    payer_id: string;
    payer_name: string;
    payment_date: Date;
    check_number: string;
    trace_number: string;
    payment_amount: number;
    allowed_amount: number;
    deductible_amount: number;
    copay_amount: number;
    coinsurance_amount: number;
    adjustment_amount: number;
    status: string;
    adjustment_codes: string;
    remark_codes: string;
    era_number: string;
    era_data: string;
    posted_by: number;
    posted_date: Date;
    reviewed_by: number;
    reviewed_date: Date;
    posting_notes: string;
    auto_posted: number;
    batch_id: string;
    created_at: Date;
    updated_at: Date;
    claim_submission: ClaimSubmission;
    poster: User;
    reviewer: User;
}
export declare class DenialManagement {
    id: number;
    uuid: string;
    claim_submission_id: number;
    denial_category: string;
    denial_date: Date;
    status: string;
    priority: string;
    denial_reasons: string;
    denied_amount: number;
    root_cause_analysis: string;
    corrective_actions: string;
    assigned_to: number;
    assigned_date: Date;
    target_resolution_date: Date;
    resolution_date: Date;
    resolution_method: string;
    resolution_notes: string;
    recovered_amount: number;
    write_off_amount: number;
    appeal_level: number;
    appeal_deadline: Date;
    appeal_documentation: string;
    prevention_strategy: string;
    lessons_learned: string;
    created_at: Date;
    updated_at: Date;
    claim_submission: ClaimSubmission;
    assignee: User;
}
export declare class PatientBilling {
    id: number;
    uuid: string;
    patient_id: number;
    statement_number: string;
    billing_date: Date;
    statement_date: Date;
    due_date: Date;
    status: string;
    total_charges: number;
    insurance_payments: number;
    patient_payments: number;
    adjustments: number;
    balance_amount: number;
    previous_balance: number;
    service_details: string;
    delivery_method: string;
    delivery_date: Date;
    delivery_address: string;
    payment_terms: string;
    collection_notes: string;
    days_overdue: number;
    aging_bucket: string;
    last_payment_date: Date;
    last_payment_amount: number;
    payment_plan_eligible: number;
    payment_plan_id: number;
    generated_by: number;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    generator: User;
    payment_plans: PaymentPlan[];
}
export declare class PaymentPlan {
    id: number;
    uuid: string;
    patient_billing_id: number;
    patient_id: number;
    plan_number: string;
    status: string;
    start_date: Date;
    end_date: Date;
    total_amount: number;
    monthly_amount: number;
    number_of_payments: number;
    interest_rate: number;
    down_payment: number;
    payment_day_of_month: number;
    payment_method: string;
    payment_terms: string;
    amount_paid: number;
    remaining_balance: number;
    payments_made: number;
    missed_payments: number;
    last_payment_date: Date;
    next_payment_date: Date;
    created_by: number;
    approved_by: number;
    approved_date: Date;
    notes: string;
    created_at: Date;
    updated_at: Date;
    patient_billing: PatientBilling;
    patient: Patient;
    creator: User;
    approver: User;
}
export declare class RevenueAnalytics {
    id: number;
    uuid: string;
    facility_id: number;
    analytics_type: string;
    metric_name: string;
    reporting_period: string;
    period_start_date: Date;
    period_end_date: Date;
    metric_value: number;
    metric_unit: string;
    breakdown_data: string;
    trend_analysis: string;
    benchmark_comparison: string;
    insights: string;
    recommendations: string;
    calculated_by: number;
    calculation_date: Date;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    calculator: User;
}
