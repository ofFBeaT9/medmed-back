import { Patient } from './patient-management.entity';
import { User } from './facility-provider.entity';
export declare class VirtualConsultation {
    id: number;
    uuid: string;
    patient_id: number;
    provider_id: number;
    consultation_date: Date;
    consultation_status: string;
    consultation_type: string;
    platform_used: string;
    session_id: string;
    meeting_url: string;
    meeting_password: string;
    scheduled_start_time: Date;
    actual_start_time: Date;
    actual_end_time: Date;
    duration_minutes: number;
    chief_complaint: string;
    consultation_notes: string;
    assessment: string;
    treatment_plan: string;
    follow_up_instructions: string;
    next_appointment: Date;
    patient_location: string;
    provider_location: string;
    technical_issues: string;
    connection_quality: string;
    recording_enabled: number;
    recording_file_path: string;
    patient_consent: string;
    billing_code: string;
    consultation_fee: number;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    provider: User;
    participants: VirtualConsultationParticipant[];
    remote_monitoring_sessions: RemoteMonitoringSession[];
}
export declare class VirtualConsultationParticipant {
    id: number;
    uuid: string;
    virtual_consultation_id: number;
    user_id: number;
    participant_type: string;
    participant_name: string;
    participant_role: string;
    join_time: Date;
    leave_time: Date;
    duration_minutes: number;
    connection_status: string;
    audio_status: string;
    video_status: string;
    screen_share_status: string;
    technical_issues: string;
    device_type: string;
    browser_type: string;
    operating_system: string;
    participant_notes: string;
    created_at: Date;
    updated_at: Date;
    virtual_consultation: VirtualConsultation;
    user: User;
}
export declare class RemoteMonitoringSession {
    id: number;
    uuid: string;
    patient_id: number;
    provider_id: number;
    virtual_consultation_id: number;
    monitoring_type: string;
    session_date: Date;
    monitoring_status: string;
    device_type: string;
    device_serial: string;
    monitoring_data: string;
    start_time: Date;
    end_time: Date;
    duration_minutes: number;
    data_points_collected: number;
    transmission_method: string;
    data_quality: string;
    alert_triggers: string;
    provider_review: string;
    reviewed_date: Date;
    patient_feedback: string;
    technical_issues: string;
    intervention_required: string;
    intervention_notes: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    provider: User;
    virtual_consultation: VirtualConsultation;
    vital_signs: RemoteVitalSigns[];
    device_alerts: DeviceAlert[];
}
export declare class RemoteVitalSigns {
    id: number;
    uuid: string;
    monitoring_session_id: number;
    patient_id: number;
    measurement_time: Date;
    vital_type: string;
    systolic_bp: number;
    diastolic_bp: number;
    heart_rate: number;
    temperature: number;
    oxygen_saturation: number;
    glucose_level: number;
    weight: number;
    respiratory_rate: number;
    measurement_unit: string;
    device_id: string;
    measurement_context: string;
    alert_level: string;
    alert_message: string;
    provider_notified: number;
    notification_time: Date;
    patient_symptoms: string;
    measurement_notes: string;
    data_source: string;
    validation_status: string;
    created_at: Date;
    updated_at: Date;
    monitoring_session: RemoteMonitoringSession;
    patient: Patient;
}
export declare class DeviceAlert {
    id: number;
    uuid: string;
    monitoring_session_id: number;
    patient_id: number;
    alert_time: Date;
    alert_type: string;
    severity_level: string;
    alert_status: string;
    alert_title: string;
    alert_message: string;
    device_id: string;
    device_type: string;
    measurement_data: string;
    threshold_values: string;
    acknowledged_by: number;
    acknowledged_time: Date;
    acknowledgment_notes: string;
    action_taken: string;
    resolved_by: number;
    resolved_time: Date;
    resolution_notes: string;
    escalated: number;
    escalated_to: number;
    escalation_time: Date;
    created_at: Date;
    updated_at: Date;
    monitoring_session: RemoteMonitoringSession;
    patient: Patient;
    acknowledger: User;
    resolver: User;
    escalation_target: User;
}
export declare class VirtualCareProgram {
    id: number;
    uuid: string;
    program_name: string;
    program_type: string;
    target_condition: string;
    specialty: string;
    program_description: string;
    eligibility_criteria: string;
    program_objectives: string;
    care_plan_template: string;
    program_duration_days: number;
    monitoring_schedule: string;
    intervention_protocols: string;
    outcome_measures: string;
    active_status: string;
    launch_date: Date;
    program_director: number;
    staff_requirements: string;
    technology_requirements: string;
    program_cost: number;
    quality_metrics: string;
    created_at: Date;
    updated_at: Date;
    director: User;
    enrollments: VirtualCareEnrollment[];
}
export declare class VirtualCareEnrollment {
    id: number;
    uuid: string;
    virtual_care_program_id: number;
    patient_id: number;
    enrollment_date: Date;
    enrollment_status: string;
    care_coordinator_id: number;
    primary_provider_id: number;
    enrollment_criteria_met: string;
    individualized_care_plan: string;
    patient_goals: string;
    program_start_date: Date;
    program_end_date: Date;
    target_duration_days: number;
    monitoring_plan: string;
    device_assignments: string;
    baseline_measurements: string;
    progress_notes: string;
    outcome_data: string;
    completion_status: string;
    completion_notes: string;
    last_contact_date: Date;
    patient_satisfaction: string;
    created_at: Date;
    updated_at: Date;
    virtual_care_program: VirtualCareProgram;
    patient: Patient;
    care_coordinator: User;
    primary_provider: User;
}
