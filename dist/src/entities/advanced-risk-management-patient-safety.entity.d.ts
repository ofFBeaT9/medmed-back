import { Patient } from './patient-management.entity';
import { User, Facility } from './facility-provider.entity';
export declare class RiskAssessment {
    id: number;
    uuid: string;
    facility_id: number;
    patient_id: number;
    assessment_date: Date;
    risk_category: string;
    risk_level: string;
    assessment_type: string;
    clinical_area: string;
    risk_status: string;
    assessor_id: number;
    likelihood_score: number;
    risk_title: string;
    risk_description: string;
    risk_factors: string;
    contributing_factors: string;
    potential_consequences: string;
    current_controls: string;
    control_effectiveness: string;
    vulnerability_analysis: string;
    impact_analysis: string;
    probability_assessment: string;
    risk_matrix_position: string;
    mitigation_strategies: string;
    recommended_actions: string;
    implementation_plan: string;
    resource_requirements: string;
    timeline_milestones: string;
    monitoring_plan: string;
    success_criteria: string;
    contingency_plans: string;
    stakeholder_analysis: string;
    communication_plan: string;
    regulatory_implications: string;
    cost_benefit_analysis: string;
    impact_score: number;
    risk_score: number;
    residual_risk_score: number;
    review_date: Date;
    mitigation_deadline: Date;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    patient: Patient;
    assessor: User;
    incident_reports: IncidentReport[];
    risk_mitigations: RiskMitigation[];
}
export declare class IncidentReport {
    id: number;
    uuid: string;
    facility_id: number;
    patient_id: number;
    risk_assessment_id: number;
    incident_date: Date;
    incident_type: string;
    severity_level: string;
    harm_level: string;
    incident_category: string;
    reporter_id: number;
    investigation_status: string;
    incident_title: string;
    incident_description: string;
    location_details: string;
    circumstances: string;
    people_involved: string;
    witness_information: string;
    equipment_involved: string;
    medication_involved: string;
    environmental_factors: string;
    contributing_factors: string;
    immediate_actions: string;
    patient_outcome: string;
    family_notification: string;
    physician_notification: string;
    investigation_findings: string;
    root_cause_analysis: string;
    system_analysis: string;
    human_factors: string;
    process_analysis: string;
    corrective_actions: string;
    preventive_actions: string;
    system_improvements: string;
    lessons_learned: string;
    communication_plan: string;
    follow_up_actions: string;
    regulatory_reporting: string;
    cost_impact: string;
    sentinel_event: boolean;
    reportable_event: boolean;
    discovery_date: Date;
    investigation_completion: Date;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    patient: Patient;
    risk_assessment: RiskAssessment;
    reporter: User;
}
export declare class RiskMitigation {
    id: number;
    uuid: string;
    risk_assessment_id: number;
    facility_id: number;
    mitigation_type: string;
    implementation_status: string;
    priority_level: string;
    effectiveness_rating: string;
    cost_category: string;
    responsible_party: number;
    target_completion: Date;
    monitoring_frequency: string;
    mitigation_title: string;
    mitigation_description: string;
    implementation_plan: string;
    resource_requirements: string;
    timeline_milestones: string;
    success_criteria: string;
    performance_indicators: string;
    monitoring_plan: string;
    evaluation_methods: string;
    communication_plan: string;
    training_requirements: string;
    policy_changes: string;
    technology_requirements: string;
    stakeholder_engagement: string;
    change_management: string;
    sustainability_plan: string;
    contingency_plans: string;
    risk_transfer_options: string;
    cost_benefit_analysis: string;
    impact_assessment: string;
    lessons_learned: string;
    estimated_cost: number;
    actual_cost: number;
    effectiveness_score: number;
    risk_reduction_percentage: number;
    implementation_start: Date;
    actual_completion: Date;
    created_at: Date;
    updated_at: Date;
    risk_assessment: RiskAssessment;
    facility: Facility;
    responsible_user: User;
}
export declare class SafetyCultureAssessment {
    id: number;
    uuid: string;
    facility_id: number;
    assessment_date: Date;
    assessment_type: string;
    survey_method: string;
    participation_rate: number;
    overall_score: number;
    culture_maturity: string;
    improvement_priority: string;
    benchmark_comparison: string;
    department_focus: string;
    assessment_title: string;
    assessment_objectives: string;
    methodology: string;
    survey_instruments: string;
    participant_demographics: string;
    response_analysis: string;
    leadership_commitment: string;
    communication_effectiveness: string;
    learning_culture: string;
    teamwork_collaboration: string;
    reporting_culture: string;
    just_culture: string;
    error_prevention: string;
    patient_safety_priority: string;
    resource_adequacy: string;
    workload_management: string;
    stress_fatigue: string;
    training_education: string;
    technology_support: string;
    performance_feedback: string;
    improvement_suggestions: string;
    action_plan: string;
    benchmark_data: string;
    trend_analysis: string;
    departmental_variations: string;
    total_participants: number;
    eligible_participants: number;
    completed_responses: number;
    survey_start_date: Date;
    survey_end_date: Date;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
export declare class CrisisManagement {
    id: number;
    uuid: string;
    facility_id: number;
    crisis_type: string;
    severity_level: string;
    activation_date: Date;
    crisis_status: string;
    response_level: string;
    incident_commander: number;
    coordination_level: string;
    resource_status: string;
    communication_status: string;
    crisis_title: string;
    crisis_description: string;
    situation_assessment: string;
    impact_assessment: string;
    resource_assessment: string;
    capacity_status: string;
    response_actions: string;
    command_structure: string;
    communication_plan: string;
    stakeholder_notifications: string;
    media_relations: string;
    staff_management: string;
    patient_management: string;
    supply_management: string;
    safety_protocols: string;
    business_continuity: string;
    recovery_planning: string;
    lessons_learned: string;
    improvement_recommendations: string;
    after_action_review: string;
    financial_impact: string;
    regulatory_reporting: string;
    deactivation_date: Date;
    recovery_completion: Date;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
    commander: User;
}
export declare class HealthcareRiskManagementQualityMetrics {
    id: number;
    uuid: string;
    reporting_period: Date;
    facility_id: number;
    risk_domain: string;
    safety_performance: string;
    incident_trend: string;
    mitigation_effectiveness: string;
    culture_maturity: string;
    crisis_preparedness: string;
    total_risk_assessments: number;
    high_risk_findings: number;
    risk_assessment_completion_rate: number;
    overall_risk_score: number;
    total_incidents_reported: number;
    incident_rate_per_1000_days: number;
    serious_adverse_events: number;
    preventable_incidents: number;
    incident_prevention_rate: number;
    mitigation_strategies_implemented: number;
    mitigation_success_rate: number;
    risk_reduction_achieved: number;
    safety_culture_score: number;
    staff_safety_confidence: number;
    reporting_culture_score: number;
    crisis_exercises_conducted: number;
    crisis_response_readiness: number;
    risk_management_investment: number;
    cost_of_incidents: number;
    risk_management_roi: number;
    risk_trends: string;
    improvement_initiatives: string;
    best_practices: string;
    technology_utilization: string;
    stakeholder_engagement: string;
    regulatory_compliance: string;
    continuous_improvement: string;
    created_at: Date;
    updated_at: Date;
    facility: Facility;
}
