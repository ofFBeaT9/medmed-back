import { Patient } from './patient-management.entity';
import { User } from './facility-provider.entity';
export declare class PediatricPatient {
    id: number;
    uuid: string;
    patient_id: number;
    birth_weight: number;
    birth_length: number;
    birth_head_circumference: number;
    gestational_age: number;
    apgar_1_min: number;
    apgar_5_min: number;
    delivery_method: string;
    birth_complications: string;
    nicu_admission: number;
    nicu_days: number;
    newborn_screening_results: string;
    hearing_screen_result: string;
    primary_pediatrician_id: number;
    parent_guardian_info: string;
    emergency_contacts: string;
    developmental_status: string;
    developmental_concerns: string;
    chronic_conditions: string;
    allergies: string;
    medications: string;
    school_info: string;
    special_needs: string;
    created_at: Date;
    updated_at: Date;
    patient: Patient;
    primary_pediatrician: User;
    pediatric_visits: PediatricVisit[];
    growth_measurements: GrowthMeasurement[];
    developmental_assessments: DevelopmentalAssessment[];
    immunizations: PediatricImmunization[];
}
export declare class PediatricVisit {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    visit_date: Date;
    visit_type: string;
    age_at_visit_months: number;
    provider_id: number;
    chief_complaint: string;
    history_of_present_illness: string;
    review_of_systems: string;
    weight_kg: number;
    height_cm: number;
    head_circumference_cm: number;
    bmi: number;
    temperature_celsius: number;
    heart_rate: number;
    respiratory_rate: number;
    systolic_bp: number;
    diastolic_bp: number;
    oxygen_saturation: number;
    weight_percentile: number;
    height_percentile: number;
    head_circumference_percentile: number;
    bmi_percentile: number;
    physical_exam: string;
    developmental_assessment: string;
    behavioral_assessment: string;
    nutritional_assessment: string;
    safety_counseling: string;
    immunizations_given: string;
    laboratory_orders: string;
    imaging_orders: string;
    assessment_plan: string;
    parent_education: string;
    anticipatory_guidance: string;
    next_visit_due: Date;
    visit_notes: string;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    provider: User;
}
export declare class GrowthMeasurement {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    measurement_date: Date;
    age_months: number;
    measurement_type: string;
    weight_kg: number;
    height_cm: number;
    head_circumference_cm: number;
    bmi: number;
    weight_percentile: number;
    height_percentile: number;
    head_circumference_percentile: number;
    bmi_percentile: number;
    weight_z_score: number;
    height_z_score: number;
    head_circumference_z_score: number;
    bmi_z_score: number;
    growth_chart_used: string;
    growth_velocity: string;
    growth_concerns: number;
    growth_assessment: string;
    interventions: string;
    measured_by: number;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    measurer: User;
}
export declare class DevelopmentalAssessment {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    assessment_date: Date;
    age_months: number;
    assessment_type: string;
    screening_tool: string;
    overall_status: string;
    gross_motor_skills: string;
    gross_motor_status: string;
    fine_motor_skills: string;
    fine_motor_status: string;
    language_skills: string;
    language_status: string;
    cognitive_skills: string;
    cognitive_status: string;
    social_emotional_skills: string;
    social_emotional_status: string;
    adaptive_skills: string;
    adaptive_status: string;
    red_flags: string;
    parent_concerns: string;
    recommendations: string;
    early_intervention_referral: number;
    specialist_referral: number;
    referral_details: string;
    next_assessment_due: Date;
    assessed_by: number;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    assessor: User;
}
export declare class PediatricImmunization {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    vaccine_name: string;
    vaccine_code: string;
    administration_date: Date;
    age_at_administration_months: number;
    vaccine_series: string;
    dose_number: number;
    manufacturer: string;
    lot_number: string;
    expiration_date: Date;
    administration_route: string;
    administration_site: string;
    dose_amount_ml: number;
    provider_id: number;
    administration_facility: string;
    adverse_reactions: string;
    reaction_severity: string;
    contraindications: string;
    vis_provided: number;
    vis_date: string;
    reported_to_registry: number;
    next_dose_due: Date;
    notes: string;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    provider: User;
}
export declare class PediatricScreening {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    screening_type: string;
    screening_name: string;
    screening_date: Date;
    age_months: number;
    result_status: string;
    screening_results: string;
    screening_method: string;
    recommendations: string;
    referral_made: number;
    referral_to: string;
    follow_up_date: Date;
    next_screening_due: Date;
    screened_by: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    screener: User;
}
export declare class SchoolHealthRecord {
    id: number;
    uuid: string;
    pediatric_patient_id: number;
    school_year: string;
    school_name: string;
    grade_level: string;
    record_type: string;
    examination_date: Date;
    clearance_status: string;
    health_conditions: string;
    medications_at_school: string;
    activity_restrictions: string;
    emergency_action_plan: string;
    accommodations: string;
    requires_nurse_supervision: number;
    form_expiration_date: Date;
    completed_by: number;
    notes: string;
    created_at: Date;
    updated_at: Date;
    pediatric_patient: PediatricPatient;
    completer: User;
}
