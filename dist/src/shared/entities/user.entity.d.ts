import { Appointment } from './appointment.entity';
import { MedicalRecord } from './medical-record.entity';
import { Prescription } from './prescription.entity';
import { Review } from './review.entity';
import { Transaction } from './transaction.entity';
import { AvailabilitySlot } from './availabilityslot.entity';
import { Patient } from './patient.entity';
export declare class User {
    id: string;
    username: string;
    email: string;
    password: string;
    firstName: string;
    lastName: string;
    middleName: string;
    title: string;
    suffix: string;
    displayName: string;
    phoneNumber: string;
    mobilePhone: string;
    address: any;
    role: string;
    permissions: any[];
    facilityAccess: any[];
    departmentId: string;
    supervisorId: string;
    providerInfo: any;
    passwordExpiry: Date;
    mustChangePassword: boolean;
    twoFactorEnabled: boolean;
    securityQuestions: any[];
    lastLogin: Date;
    lastActivity: Date;
    sessionTimeout: number;
    maxConcurrentSessions: number;
    isActive: boolean;
    isLocked: boolean;
    lockoutExpiry: Date;
    failedLoginAttempts: number;
    emailVerified: boolean;
    phoneVerified: boolean;
    preferences: any;
    emergencyAccess: any;
    certifications: any[];
    trainings: any[];
    communicationPreferences: any;
    specialization: string;
    licenseNumber: string;
    profileImage: string;
    isVerified: boolean;
    verificationToken: string;
    resetPasswordToken: string;
    resetPasswordExpires: Date;
    lastPasswordChange: Date;
    accountExpiryDate: Date;
    createdAt: Date;
    updatedAt: Date;
    createdBy: string;
    lastModifiedBy: string;
    supervisor: User;
    subordinates: User[];
    patientAppointments: Appointment[];
    patientRecords: MedicalRecord[];
    patientPrescriptions: Prescription[];
    patientReviews: Review[];
    patientTransactions: Transaction[];
    doctorAppointments: Appointment[];
    doctorRecords: MedicalRecord[];
    doctorPrescriptions: Prescription[];
    doctorReviews: Review[];
    doctorTransactions: Transaction[];
    availabilitySlots: AvailabilitySlot[];
    primaryCarePatients: Patient[];
    get fullName(): string;
    get displayNameOrFullName(): string;
    get isProvider(): boolean;
    get isAdmin(): boolean;
    get isPatient(): boolean;
}
