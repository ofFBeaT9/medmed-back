import { Patient } from './patient.entity';
import { User } from './user.entity';
import { MedicalRecord } from './medical-record.entity';
export declare class BillingEncounter {
    id: string;
    encounterNumber: string;
    externalId: string;
    patientId: string;
    providerId: string;
    facilityId: string;
    departmentId: string;
    medicalRecordId: string;
    serviceDate: Date;
    encounterType: string;
    placeOfService: string;
    typeOfService: string;
    totalCharges: number;
    totalPayments: number;
    totalAdjustments: number;
    patientBalance: number;
    insuranceBalance: number;
    status: string;
    isBilled: boolean;
    billedDate: Date;
    primaryInsuranceId: string;
    secondaryInsuranceId: string;
    authorizationNumber: string;
    referralNumber: string;
    createdAt: Date;
    updatedAt: Date;
    createdBy: string;
    lastModifiedBy: string;
    patient: Patient;
    provider: User;
    medicalRecord: MedicalRecord;
    charges: BillingCharge[];
    claims: InsuranceClaim[];
    payments: Payment[];
}
export declare class BillingCharge {
    id: string;
    encounterId: string;
    procedureCode: string;
    procedureCodeType: string;
    description: string;
    modifier1: string;
    modifier2: string;
    modifier3: string;
    modifier4: string;
    primaryDiagnosisCode: string;
    additionalDiagnosisCodes: string[];
    unitPrice: number;
    quantity: number;
    totalAmount: number;
    allowedAmount: number;
    paidAmount: number;
    adjustmentAmount: number;
    balanceAmount: number;
    serviceDate: Date;
    serviceLocation: string;
    providerId: string;
    status: string;
    isBillable: boolean;
    createdAt: Date;
    updatedAt: Date;
    encounter: BillingEncounter;
    provider: User;
}
export declare class InsurancePlan {
    id: string;
    planName: string;
    payerName: string;
    payerId: string;
    planType: string;
    phoneNumber: string;
    faxNumber: string;
    website: string;
    address: string;
    coverageDetails: any;
    copayInformation: any;
    deductibleInformation: any;
    isActive: boolean;
    acceptsElectronicClaims: boolean;
    createdAt: Date;
    updatedAt: Date;
}
export declare class PatientInsurance {
    id: string;
    patientId: string;
    insurancePlanId: string;
    policyNumber: string;
    groupNumber: string;
    subscriberId: string;
    subscriberName: string;
    relationshipToSubscriber: string;
    effectiveDate: Date;
    terminationDate: Date;
    priority: number;
    authorizationNumber: string;
    authorizationExpiry: Date;
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
    patient: Patient;
    insurancePlan: InsurancePlan;
}
export declare class InsuranceClaim {
    id: string;
    claimNumber: string;
    externalClaimId: string;
    encounterId: string;
    patientInsuranceId: string;
    claimDate: Date;
    submittedDate: Date;
    totalCharges: number;
    allowedAmount: number;
    paidAmount: number;
    patientResponsibility: number;
    status: string;
    isElectronic: boolean;
    denialReason: string;
    notes: string;
    createdAt: Date;
    updatedAt: Date;
    encounter: BillingEncounter;
    patientInsurance: PatientInsurance;
}
export declare class Payment {
    id: string;
    encounterId: string;
    amount: number;
    paymentDate: Date;
    paymentMethod: string;
    paymentSource: string;
    referenceNumber: string;
    checkNumber: string;
    processedBy: string;
    processedDate: Date;
    isRefund: boolean;
    originalPaymentId: string;
    status: string;
    notes: string;
    createdAt: Date;
    updatedAt: Date;
    encounter: BillingEncounter;
    processor: User;
}
